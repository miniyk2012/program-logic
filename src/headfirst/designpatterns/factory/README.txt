简单工厂:
把创建产品的代码隔离到一个类中去做, 就是简单工厂, 它生产的产品有一个共同的父类.
创建产品的代码一般包含多个if语句, 根据传入的产品类型选择其中一种产品.

工厂方法:
定义了一个创建产品的工厂接口, 但由子类工厂决定要实例化的产品. 工厂方法让产品实例化推迟到子类.
创建产品的工厂可以选择不同的子类工厂, 它们有共同的父类.
生产的产品也有共同的父类, 每个子类工厂的创建产品的代码可以传入类型, 也可以不传.
工厂的公共父类通常有这样的方法: 该方法会调用产品的公共父类方法.

该模式涉及到的原则
1. 要依赖抽象, 不要依赖具体类
    依赖倒置原则:
    变量不可持有具体类的引用; (如果要new对象, 用工厂模式封装起来)
    不要让类派生自具体类; (否则派生类就会依赖具体类, 请派生自一个抽象(如接口或抽象类))
    不要覆盖基类中已实现的方法; (说明基类设计不好, 基类已实现的方法应该被所有子类共享)
